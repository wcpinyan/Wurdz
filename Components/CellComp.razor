@using Wurdz.Shared.Models
@*@inject AppState appState*@



@*@if (Item.)
    {

      <img style="border:.1em solid @currentTile.borderColor" src="@appState.selectedCell.image"  alt="Alternate Text" />
    }
    else
    {*@
<div class="dropzone"
     ondragover="event.preventDefault();"
     @ondragenter="HandleDragEnter"
     @ondrop="HandleDrop" style="background-color:@Item.color;align-content:center;">
    @if (Item.image != null)
    {
        <img style="display:block;margin:auto;width:90%;height:90%;z-index:3" src="@Item.image">
    }
    else
    {
        <span style="z-index:2">@Item.caption</span>

    }
</div>
@*}*@



@code {
    [CascadingParameter] public CascadingAppState appState { get; set; }
    string dropClass = "";
    [Parameter] public string image { get; set; }
    [Parameter] public Cell Item { get; set; }
    [Parameter] public TileModel currentTile { get; set; }
    [Parameter] public bool HasTile { get; set; }
    [Parameter] public PlayerModel activePlayer { get; set; }
    [Parameter] public EventCallback<Cell> OnDrop { get; set; }
    private void HandleDrop()
    {
        dropClass = "";
        HasTile = true;
        appState.selectedTile.cellDroppedOn = Item;
        currentTile = appState.selectedTile;
        Item.image = currentTile.url;
        appState.selectedCell = Item;
        @* Console.WriteLine("assigned to: "+currentTile.assignedTo); *@

        //TODO: put other players here
    }

    private void HandleDragEnter()
    {
        var cell = Item;
        dropClass = "can-drop";
        Console.WriteLine("hadle drag enter");
    }
   
}

